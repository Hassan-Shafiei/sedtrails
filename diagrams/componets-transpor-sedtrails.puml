@startuml SedtrailComponent
' !include <C4/C4_Container>

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

' LAYOUT_LANDSCAPE()

title sedTRAILS: Component Diagram for sedTRAILS Application
' scale 2

Person(modeler, "Modeler", "wants to track sand particles in a costal system")

Container(transportConverter, "Transport Converter", "Python", "An application that pre-process transport flow-field data to convert it to compatible formats and physical units.")

Container(cache, "Simulation Caching and State Tracker", "Python", "keeps track of simulation state and cache simulation outputs to allow restarts, and reusing simulation outputs")

Container_Boundary(sedtrailsApp, "sedTRAILS Application"){ 
    Component(seedingTool, "Particle Seeding Tool", "Python", "computes initial particle positions and  particle's release times using various particle release strategies")
    Component(particleTracer, "Particle Tracer", "Python", "converts flow-field data from various Eulerian flow modeling systems into particle velocity using standard physical units")
    Component(pathwayWriter, "Pathway File Writer", "Python, NETCDF", "writes particle pathways to files")
   

    Rel(modeler, seedingTool, "defines seeding parameters for", "Configuration file")
    Rel(modeler, particleTracer, "defines simulation parameters for", "Configuration file")
    Rel(seedingTool, particleTracer, "provides particle positions and release times to ", "Python")
    Rel(particleTracer, pathwayWriter, "provides output pathways to", "Python")
    Rel(particleTracer, cache, "uses")
    Rel(seedingTool, cache, "uses")
}

SystemDb_Ext(fileSystem, "Local File System", "OS file system", $type="Windows, Linux, MacOS")

Rel(pathwayWriter, fileSystem, "write pathway files to", "NETCDF")
Rel(transportConverter, particleTracer, "provides transformed transport flow-field data to", "Python")

SHOW_LEGEND()
@enduml

